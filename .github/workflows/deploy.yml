name: 🚀 Deploy to DomainFactory via FTP

on:
  push:
    branches:
      - main

jobs:
  ftp-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🔍 Check autobuild.txt
        id: autobuild
        run: |
          if [ ! -f autobuild.txt ]; then
            echo "🚫 Datei autobuild.txt wurde nicht gefunden!"
            echo "deploy=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          content=$(grep -v '^#' autobuild.txt | head -n 1 | tr -d '\r' | xargs | tr '[:upper:]' '[:lower:]')
          echo "📄 Gelesener Wert aus autobuild.txt: '$content'"

          if [[ "$content" == "on" ]]; then
            echo "✅ Deploy ist aktiviert."
            echo "deploy=true" >> "$GITHUB_OUTPUT"
          else
            echo "🚫 Deploy ist deaktiviert."
            echo "deploy=false" >> "$GITHUB_OUTPUT"
          fi

      - name: 🚫 Skip deployment if autobuild.txt is not 'on'
        if: steps.autobuild.outputs.deploy == 'false'
        run: echo "Skipping deployment because autobuild.txt is not set to 'on'"

      - name: 📦 Install dependencies and build (Vite)
        if: steps.autobuild.outputs.deploy == 'true'
        run: |
          npm ci
          npm run build

      - name: 🚀 Upload to DomainFactory via FTP
        if: steps.autobuild.outputs.deploy == 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dist/
          server-dir: ./
