name: 🚀 Deploy to DomainFactory via FTP

on:
  push:
    branches:
      - main

jobs:
  ftp-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ❓ Check autobuild flag (mit Kommentar-Support)
        run: |
          AUTOBUILD=$(grep -v '^#' autobuild.txt | head -n 1)
          echo "Autobuild-Modus: $AUTOBUILD"
          if [[ "$AUTOBUILD" != "on" ]]; then
            echo "🚫 Autobuild deaktiviert – Abbruch."
            exit 0
          fi

      - name: ⚙️ Install dependencies and build (nur wenn live)
        run: |
          MODE=$(grep -v '^#' mode.txt | head -n 1)
          echo "Deploy-Modus: $MODE"
          if [[ "$MODE" == "live" ]]; then
            echo "📦 Installiere Abhängigkeiten..."
            npm ci || { echo "❌ npm ci fehlgeschlagen"; exit 1; }
            echo "🔨 Baue Projekt mit Vite..."
            npm run build || { echo "❌ Build fehlgeschlagen"; exit 1; }
          else
            echo "⚠️ Wartungsmodus – kein Build nötig"
          fi


      - name: 📁 Setze lokalen Upload-Ordner (dist/ oder maintenance-html/)
        id: modecheck
        run: |
          MODE=$(grep -v '^#' mode.txt | head -n 1)
          if [[ "$MODE" == "maintenance" ]]; then
            echo "➡️ Verwende maintenance-html/"
            echo "localdir=maintenance-html/" >> $GITHUB_OUTPUT
          else
            if [[ ! -d "dist" ]]; then
              echo "❌ Fehler: dist/ fehlt! Wahrscheinlich Build fehlgeschlagen."
              exit 1
            fi
            echo "➡️ Verwende dist/"
            echo "localdir=dist/" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 FTP-Upload zu DomainFactory
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ${{ steps.modecheck.outputs.localdir }}/
          server-dir: ./
